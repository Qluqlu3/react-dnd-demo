[{"/Users/kay/react/react-dnd-sample/src/index.tsx":"1","/Users/kay/react/react-dnd-sample/src/components/App.tsx":"2","/Users/kay/react/react-dnd-sample/src/components/DragCard.tsx":"3","/Users/kay/react/react-dnd-sample/src/components/DragArea.tsx":"4","/Users/kay/react/react-dnd-sample/src/types/models.ts":"5"},{"size":192,"mtime":1607165115875,"results":"6","hashOfConfig":"7"},{"size":312,"mtime":1607191570618,"results":"8","hashOfConfig":"7"},{"size":1844,"mtime":1607192607741,"results":"9","hashOfConfig":"7"},{"size":1647,"mtime":1607192422161,"results":"10","hashOfConfig":"7"},{"size":49,"mtime":1607178198195,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mo8e18",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kay/react/react-dnd-sample/src/index.tsx",[],"/Users/kay/react/react-dnd-sample/src/components/App.tsx",[],"/Users/kay/react/react-dnd-sample/src/components/DragCard.tsx",[],"/Users/kay/react/react-dnd-sample/src/components/DragArea.tsx",["23","24"],"import React, { FC, useState, useCallback } from 'react';\nimport Card from './DragCard';\nimport update from 'immutability-helper';\nimport styled from 'styled-components';\n\nimport { Data } from '../types/models';\n\nconst List = styled.div`\n  width: 300px;\n  padding: 50px;\n  background-color: #ccc;\n  margin: 50px;\n`;\n\nconst DragArea: FC = () => {\n  {\n    const [cards, setCards] = useState([\n      {\n        id: 1,\n        text: 'ID:1',\n      },\n      {\n        id: 2,\n        text: 'ID:2',\n      },\n      {\n        id: 3,\n        text: 'ID:3',\n      },\n      {\n        id: 4,\n        text: 'ID:4',\n      },\n      {\n        id: 5,\n        text: 'ID:5',\n      },\n      {\n        id: 6,\n        text: 'ID:6',\n      },\n      {\n        id: 7,\n        text: 'ID:7',\n      },\n      {\n        id: 8,\n        text: 'ID:8',\n      },\n      {\n        id: 9,\n        text: 'ID:9',\n      },\n      {\n        id: 10,\n        text: 'ID:10',\n      },\n    ]);\n\n    const moveCard = useCallback(\n      (dragIndex: number, hoverIndex: number) => {\n        const dragCard = cards[dragIndex];\n        setCards(\n          update(cards, {\n            $splice: [\n              [dragIndex, 1],\n              [hoverIndex, 0, dragCard],\n            ],\n          })\n        );\n      },\n      [cards]\n    );\n\n    const renderCard = (card: { id: number; text: string }, index: number) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      );\n    };\n\n    return <List>{cards.map((card, i) => renderCard(card, i))}</List>;\n  }\n};\n\nexport default DragArea;\n","/Users/kay/react/react-dnd-sample/src/types/models.ts",[],{"ruleId":"25","severity":1,"message":"26","line":6,"column":10,"nodeType":"27","messageId":"28","endLine":6,"endColumn":14},{"ruleId":"29","severity":1,"message":"30","line":16,"column":3,"nodeType":"31","messageId":"32","endLine":88,"endColumn":4},"@typescript-eslint/no-unused-vars","'Data' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]